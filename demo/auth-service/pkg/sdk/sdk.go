// Code generated by coattail; DO NOT EDIT.
package sdk

import (
    "github.com/nathan-fiscaletti/ct1/pkg/types"
	"context"
	"fmt"

	"github.com/nathan-fiscaletti/coattail-go/pkg/coattailtypes"
)

type Sdk struct {
	peer *coattailtypes.Peer
}

func NewSdk(peer *coattailtypes.Peer) *Sdk {
	return &Sdk{
		peer: peer,
	}
}

func (s *Sdk) Authenticate(ctx context.Context, arg types.Request) (types.Response, error) {
    res, err := s.peer.Run(ctx, "Authenticate", arg)

    if err != nil {
        return types.Response{}, err
    }

    if out, ok := res.(types.Response); ok {
        return out, nil
    }

    return types.Response{}, fmt.Errorf("unexpected response type: %T", res)
}
